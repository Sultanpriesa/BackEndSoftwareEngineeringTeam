// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tablApi.Data;

#nullable disable

namespace tablApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("tablApi.Model.Class", b =>
                {
                    b.Property<int>("Class_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Class_ID"));

                    b.Property<string>("Class_desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Class_yearLevel")
                        .HasColumnType("int");

                    b.Property<int>("Course_ID")
                        .HasColumnType("int");

                    b.Property<int>("Tutor_ID")
                        .HasColumnType("int");

                    b.HasKey("Class_ID");

                    b.HasIndex("Course_ID");

                    b.HasIndex("Tutor_ID");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Class_ID = 1,
                            Class_desc = "Basic Mathematics",
                            Class_name = "Math 101",
                            Class_yearLevel = 1,
                            Course_ID = 1,
                            Tutor_ID = 1
                        },
                        new
                        {
                            Class_ID = 2,
                            Class_desc = "Introduction to Physics",
                            Class_name = "Physics 101",
                            Class_yearLevel = 1,
                            Course_ID = 2,
                            Tutor_ID = 1
                        },
                        new
                        {
                            Class_ID = 3,
                            Class_desc = "Introduction to Programming",
                            Class_name = "Programming 101",
                            Class_yearLevel = 1,
                            Course_ID = 3,
                            Tutor_ID = 2
                        },
                        new
                        {
                            Class_ID = 4,
                            Class_desc = "Basic English",
                            Class_name = "English 101",
                            Class_yearLevel = 1,
                            Course_ID = 4,
                            Tutor_ID = 2
                        },
                        new
                        {
                            Class_ID = 5,
                            Class_desc = "World History",
                            Class_name = "History 101",
                            Class_yearLevel = 1,
                            Course_ID = 5,
                            Tutor_ID = 1
                        });
                });

            modelBuilder.Entity("tablApi.Model.ClassSchedule", b =>
                {
                    b.Property<int>("Schedule_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Schedule_ID"));

                    b.Property<int>("Class_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Student_ID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("Schedule_ID");

                    b.HasIndex("Class_ID");

                    b.HasIndex("Student_ID");

                    b.ToTable("ClassSchedules");

                    b.HasData(
                        new
                        {
                            Schedule_ID = 1,
                            Class_ID = 1,
                            Date = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Student_ID = 1,
                            Time = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Schedule_ID = 2,
                            Class_ID = 1,
                            Date = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Student_ID = 2,
                            Time = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Schedule_ID = 3,
                            Class_ID = 2,
                            Date = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Student_ID = 1,
                            Time = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            Schedule_ID = 4,
                            Class_ID = 3,
                            Date = new DateTime(2024, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Student_ID = 3,
                            Time = new TimeSpan(0, 11, 0, 0, 0)
                        },
                        new
                        {
                            Schedule_ID = 5,
                            Class_ID = 4,
                            Date = new DateTime(2024, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Student_ID = 2,
                            Time = new TimeSpan(0, 13, 0, 0, 0)
                        },
                        new
                        {
                            Schedule_ID = 6,
                            Class_ID = 5,
                            Date = new DateTime(2024, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Student_ID = 3,
                            Time = new TimeSpan(0, 14, 0, 0, 0)
                        },
                        new
                        {
                            Schedule_ID = 7,
                            Class_ID = 1,
                            Date = new DateTime(2024, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Student_ID = 3,
                            Time = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Schedule_ID = 8,
                            Class_ID = 2,
                            Date = new DateTime(2024, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Student_ID = 2,
                            Time = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            Schedule_ID = 9,
                            Class_ID = 3,
                            Date = new DateTime(2024, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Student_ID = 1,
                            Time = new TimeSpan(0, 11, 0, 0, 0)
                        },
                        new
                        {
                            Schedule_ID = 10,
                            Class_ID = 4,
                            Date = new DateTime(2024, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Student_ID = 3,
                            Time = new TimeSpan(0, 13, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("tablApi.Model.Course", b =>
                {
                    b.Property<int>("Course_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Course_ID"));

                    b.Property<string>("Course_Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Course_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Course_ID");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Course_ID = 1,
                            Course_Desc = "Advanced mathematics course",
                            Course_Name = "Mathematics"
                        },
                        new
                        {
                            Course_ID = 2,
                            Course_Desc = "Introduction to physics",
                            Course_Name = "Physics"
                        },
                        new
                        {
                            Course_ID = 3,
                            Course_Desc = "Programming fundamentals",
                            Course_Name = "Computer Science"
                        },
                        new
                        {
                            Course_ID = 4,
                            Course_Desc = "English literature and composition",
                            Course_Name = "English"
                        },
                        new
                        {
                            Course_ID = 5,
                            Course_Desc = "World history overview",
                            Course_Name = "History"
                        });
                });

            modelBuilder.Entity("tablApi.Model.Student", b =>
                {
                    b.Property<int>("Student_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Student_ID"));

                    b.Property<int?>("ClassScheduleSchedule_ID")
                        .HasColumnType("int");

                    b.Property<string>("Student_LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.Property<int?>("student_yearLevel")
                        .HasColumnType("int");

                    b.HasKey("Student_ID");

                    b.HasIndex("ClassScheduleSchedule_ID");

                    b.HasIndex("User_ID")
                        .IsUnique();

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Student_ID = 1,
                            Student_LastName = "Johnson",
                            Student_firstName = "Alice",
                            User_ID = 3,
                            student_yearLevel = 1
                        },
                        new
                        {
                            Student_ID = 2,
                            Student_LastName = "Williams",
                            Student_firstName = "Bob",
                            User_ID = 4,
                            student_yearLevel = 2
                        },
                        new
                        {
                            Student_ID = 3,
                            Student_LastName = "Brown",
                            Student_firstName = "Charlie",
                            User_ID = 5,
                            student_yearLevel = 1
                        });
                });

            modelBuilder.Entity("tablApi.Model.Tutor", b =>
                {
                    b.Property<int>("Tutor_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Tutor_ID"));

                    b.Property<string>("Tutor_LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tutor_firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Tutor_ID");

                    b.HasIndex("User_ID")
                        .IsUnique();

                    b.ToTable("Tutors");

                    b.HasData(
                        new
                        {
                            Tutor_ID = 1,
                            Tutor_LastName = "Doe",
                            Tutor_firstName = "John",
                            User_ID = 1
                        },
                        new
                        {
                            Tutor_ID = 2,
                            Tutor_LastName = "Smith",
                            Tutor_firstName = "Jane",
                            User_ID = 2
                        });
                });

            modelBuilder.Entity("tablApi.Model.User", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_ID"));

                    b.Property<string>("User_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_ID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            User_ID = 1,
                            User_email = "admin",
                            User_password = "admin",
                            User_type = "Admin"
                        },
                        new
                        {
                            User_ID = 2,
                            User_email = "jane.smith@email.com",
                            User_password = "hashed_password_2",
                            User_type = "Tutor"
                        },
                        new
                        {
                            User_ID = 3,
                            User_email = "alice@email.com",
                            User_password = "hashed_password_3",
                            User_type = "Student"
                        },
                        new
                        {
                            User_ID = 4,
                            User_email = "bob@email.com",
                            User_password = "hashed_password_4",
                            User_type = "Student"
                        },
                        new
                        {
                            User_ID = 5,
                            User_email = "charlie@email.com",
                            User_password = "hashed_password_5",
                            User_type = "Student"
                        });
                });

            modelBuilder.Entity("tablApi.Model.Class", b =>
                {
                    b.HasOne("tablApi.Model.Course", "Course")
                        .WithMany("Classes")
                        .HasForeignKey("Course_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tablApi.Model.Tutor", "Tutor")
                        .WithMany("ClassList")
                        .HasForeignKey("Tutor_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("tablApi.Model.ClassSchedule", b =>
                {
                    b.HasOne("tablApi.Model.Class", "Class")
                        .WithMany("ClassSchedulesList")
                        .HasForeignKey("Class_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tablApi.Model.Student", "Student")
                        .WithMany("ClassSchedulesList")
                        .HasForeignKey("Student_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("tablApi.Model.Student", b =>
                {
                    b.HasOne("tablApi.Model.ClassSchedule", null)
                        .WithMany("Students")
                        .HasForeignKey("ClassScheduleSchedule_ID");

                    b.HasOne("tablApi.Model.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("tablApi.Model.Student", "User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("tablApi.Model.Tutor", b =>
                {
                    b.HasOne("tablApi.Model.User", "User")
                        .WithOne("Tutor")
                        .HasForeignKey("tablApi.Model.Tutor", "User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("tablApi.Model.Class", b =>
                {
                    b.Navigation("ClassSchedulesList");
                });

            modelBuilder.Entity("tablApi.Model.ClassSchedule", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("tablApi.Model.Course", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("tablApi.Model.Student", b =>
                {
                    b.Navigation("ClassSchedulesList");
                });

            modelBuilder.Entity("tablApi.Model.Tutor", b =>
                {
                    b.Navigation("ClassList");
                });

            modelBuilder.Entity("tablApi.Model.User", b =>
                {
                    b.Navigation("Student");

                    b.Navigation("Tutor");
                });
#pragma warning restore 612, 618
        }
    }
}
