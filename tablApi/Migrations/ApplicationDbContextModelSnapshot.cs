// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tablApi.Data;

#nullable disable

namespace tablApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("tablApi.Data.ClassList", b =>
                {
                    b.Property<int>("Student_ID")
                        .HasColumnType("int");

                    b.Property<int>("Class_ID")
                        .HasColumnType("int");

                    b.HasKey("Student_ID", "Class_ID");

                    b.HasIndex("Class_ID");

                    b.ToTable("ClassLists");

                    b.HasData(
                        new
                        {
                            Student_ID = 1,
                            Class_ID = 1
                        },
                        new
                        {
                            Student_ID = 1,
                            Class_ID = 2
                        },
                        new
                        {
                            Student_ID = 2,
                            Class_ID = 1
                        });
                });

            modelBuilder.Entity("tablApi.Data.StudentClassEntry", b =>
                {
                    b.Property<int>("Student_ID")
                        .HasColumnType("int");

                    b.Property<int>("ClassEntry_ID")
                        .HasColumnType("int");

                    b.HasKey("Student_ID", "ClassEntry_ID");

                    b.HasIndex("ClassEntry_ID");

                    b.ToTable("StudentClassEntries");

                    b.HasData(
                        new
                        {
                            Student_ID = 1,
                            ClassEntry_ID = 1
                        },
                        new
                        {
                            Student_ID = 2,
                            ClassEntry_ID = 1
                        });
                });

            modelBuilder.Entity("tablApi.Model.Class", b =>
                {
                    b.Property<int>("Class_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Class_ID"));

                    b.Property<string>("Class_Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Tutor_ID")
                        .HasColumnType("int");

                    b.HasKey("Class_ID");

                    b.HasIndex("Tutor_ID");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Class_ID = 1,
                            Class_Desc = "Introduction to Basic Mathematics",
                            Class_Name = "Mathematics 101",
                            EndDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Room = "Room 101",
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tutor_ID = 1
                        },
                        new
                        {
                            Class_ID = 2,
                            Class_Desc = "Introduction to Physics",
                            Class_Name = "Physics 101",
                            EndDate = new DateTime(2024, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Room = "Room 102",
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tutor_ID = 2
                        });
                });

            modelBuilder.Entity("tablApi.Model.ClassEntry", b =>
                {
                    b.Property<int>("ClassEntry_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassEntry_ID"));

                    b.Property<int>("ClassSchedule_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("ClassEntry_ID");

                    b.HasIndex("ClassSchedule_ID");

                    b.ToTable("ClassEntries");

                    b.HasData(
                        new
                        {
                            ClassEntry_ID = 1,
                            ClassSchedule_ID = 1,
                            Date = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ClassEntry_ID = 2,
                            ClassSchedule_ID = 2,
                            Date = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ClassEntry_ID = 3,
                            ClassSchedule_ID = 3,
                            Date = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ClassEntry_ID = 4,
                            ClassSchedule_ID = 4,
                            Date = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("tablApi.Model.ClassSchedule", b =>
                {
                    b.Property<int>("Schedule_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Schedule_ID"));

                    b.Property<int>("Class_ID")
                        .HasColumnType("int");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Schedule_ID");

                    b.HasIndex("Class_ID");

                    b.ToTable("ClassSchedules");

                    b.HasData(
                        new
                        {
                            Schedule_ID = 1,
                            Class_ID = 1,
                            DayOfWeek = 1,
                            EndTime = new TimeSpan(0, 10, 30, 0, 0),
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Schedule_ID = 2,
                            Class_ID = 1,
                            DayOfWeek = 3,
                            EndTime = new TimeSpan(0, 10, 30, 0, 0),
                            StartTime = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            Schedule_ID = 3,
                            Class_ID = 2,
                            DayOfWeek = 2,
                            EndTime = new TimeSpan(0, 14, 30, 0, 0),
                            StartTime = new TimeSpan(0, 13, 0, 0, 0)
                        },
                        new
                        {
                            Schedule_ID = 4,
                            Class_ID = 2,
                            DayOfWeek = 4,
                            EndTime = new TimeSpan(0, 14, 30, 0, 0),
                            StartTime = new TimeSpan(0, 13, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("tablApi.Model.Student", b =>
                {
                    b.Property<int>("Student_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Student_ID"));

                    b.Property<string>("Student_LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Student_firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Student_ID");

                    b.HasIndex("User_ID")
                        .IsUnique();

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Student_ID = 1,
                            Student_LastName = "Johnson",
                            Student_firstName = "Alice",
                            User_ID = 4
                        },
                        new
                        {
                            Student_ID = 2,
                            Student_LastName = "Williams",
                            Student_firstName = "Bob",
                            User_ID = 5
                        });
                });

            modelBuilder.Entity("tablApi.Model.Tutor", b =>
                {
                    b.Property<int>("Tutor_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Tutor_ID"));

                    b.Property<string>("Tutor_LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tutor_firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Tutor_ID");

                    b.HasIndex("User_ID")
                        .IsUnique();

                    b.ToTable("Tutors");

                    b.HasData(
                        new
                        {
                            Tutor_ID = 1,
                            Tutor_LastName = "Smith",
                            Tutor_firstName = "John",
                            User_ID = 2
                        },
                        new
                        {
                            Tutor_ID = 2,
                            Tutor_LastName = "Doe",
                            Tutor_firstName = "Jane",
                            User_ID = 3
                        });
                });

            modelBuilder.Entity("tablApi.Model.User", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_ID"));

                    b.Property<string>("User_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_ID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            User_ID = 1,
                            User_email = "admin",
                            User_password = "admin",
                            User_type = "Admin"
                        },
                        new
                        {
                            User_ID = 2,
                            User_email = "john.tutor@school.com",
                            User_password = "tutor123",
                            User_type = "Tutor"
                        },
                        new
                        {
                            User_ID = 3,
                            User_email = "jane.tutor@school.com",
                            User_password = "tutor123",
                            User_type = "Tutor"
                        },
                        new
                        {
                            User_ID = 4,
                            User_email = "alice.student@school.com",
                            User_password = "student123",
                            User_type = "Student"
                        },
                        new
                        {
                            User_ID = 5,
                            User_email = "bob.student@school.com",
                            User_password = "student123",
                            User_type = "Student"
                        });
                });

            modelBuilder.Entity("tablApi.Data.ClassList", b =>
                {
                    b.HasOne("tablApi.Model.Class", "Class")
                        .WithMany()
                        .HasForeignKey("Class_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tablApi.Model.Student", "Student")
                        .WithMany()
                        .HasForeignKey("Student_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("tablApi.Data.StudentClassEntry", b =>
                {
                    b.HasOne("tablApi.Model.ClassEntry", "ClassEntry")
                        .WithMany()
                        .HasForeignKey("ClassEntry_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tablApi.Model.Student", "Student")
                        .WithMany()
                        .HasForeignKey("Student_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassEntry");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("tablApi.Model.Class", b =>
                {
                    b.HasOne("tablApi.Model.Tutor", "Tutor")
                        .WithMany("Classes")
                        .HasForeignKey("Tutor_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("tablApi.Model.ClassEntry", b =>
                {
                    b.HasOne("tablApi.Model.ClassSchedule", "ClassSchedule")
                        .WithMany("ClassEntries")
                        .HasForeignKey("ClassSchedule_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassSchedule");
                });

            modelBuilder.Entity("tablApi.Model.ClassSchedule", b =>
                {
                    b.HasOne("tablApi.Model.Class", "Class")
                        .WithMany("Schedules")
                        .HasForeignKey("Class_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("tablApi.Model.Student", b =>
                {
                    b.HasOne("tablApi.Model.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("tablApi.Model.Student", "User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("tablApi.Model.Tutor", b =>
                {
                    b.HasOne("tablApi.Model.User", "User")
                        .WithOne("Tutor")
                        .HasForeignKey("tablApi.Model.Tutor", "User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("tablApi.Model.Class", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("tablApi.Model.ClassSchedule", b =>
                {
                    b.Navigation("ClassEntries");
                });

            modelBuilder.Entity("tablApi.Model.Tutor", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("tablApi.Model.User", b =>
                {
                    b.Navigation("Student");

                    b.Navigation("Tutor");
                });
#pragma warning restore 612, 618
        }
    }
}
